// 
// Import database queries
//

var crypto = require('crypto');

// 16 byte key randomly generated by the crypto library.
generateSessionId = function() {
    return crypto.randomBytes(16).toString('base64');
};

function releaseSessionIds(username) {
  // Remove any session ids for the user in the data store
  //   ex: delete from SESSION_ID_TABLE where USERNAME = <user>;
}

module.exports = function(app) {

  app.post('/api/login', function(req, res) {
    res.setHeader('Content-Type', 'application/json');
    let loginInfo = req.body;
    if (loginInfo.username === undefined ||
      loginInfo.password === undefined) {
      res.status = 200;   //  Someone is passing garbage.  So say things are successful, but don't return any session variable.
    }
    else if (loginInfo.username == loginInfo.password)
    {
      // Generate a new session id.
      let sessionId = generateSessionId();
      console.log("login",loginInfo.username + " assigned session id " + sessionId);
      // Add the session id to the data store.
      //   ex: insert into SESSION_ID_TABLE (USER, SESSION_ID, CREATE_DATE) values loginInfo.username, sessionId, GETDATE())
      //   Notes:
      //           create date allows the sessions to be timed out.
      //           can be kept in memory/redis too - maybe quicker to access.
      //
      res.end(JSON.stringify({ sessionId }));
    }

    // Invalid log in.
    console.log("login",loginInfo.username + " invalid password.");
    res.status = 401;
    res.end("{}"); 
  });
};
